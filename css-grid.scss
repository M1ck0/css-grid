/* FRAMEWORK IN PROGRESS */

// Variables
$content-width: 1340px;
$gap-var: 30px;

// Functions
@function handle-columns($columns) {
  $element-width: calc(calc(#{$content-width}/#{$columns}) - #{$gap-var});
  $grid-template-columns: 0;

  @if $columns == 2 {
    $grid-template-columns: repeat(auto-fill, minmax(min(100%, 450px), 1fr));
  }
  @else if $columns == 3 {
    $grid-template-columns: repeat(auto-fit, minmax(min(100%, 400px), 1fr));
  }
  @else if $columns == 4 {
    $grid-template-columns: repeat(auto-fit, minmax(min(100%, 300px), 1fr));
  } @else {
    $grid-template-columns: repeat(
      auto-fit,
      minmax(
        min(100%, calc(calc(#{$content-width}/#{$columns}) - #{$gap-var})),
        1fr
      )
    );
  }

  @return $grid-template-columns;
}

// Main code
.grid {
  max-width: $content-width;
  padding: 0 20px;
  margin: 0 auto;

  @for $i from 1 through 12 {
    [class*="grid-layout-#{$i}"] {
      grid-template-columns: handle-columns($i);
    }
  }

  [class*="grid-layout"] {
    display: grid;
    grid-gap: $gap-var;
    margin-bottom: $gap-var;

    &.center-items {
      place-items: center;

      & > * {
        min-height: 10px; // just to ensure that all the elements have min height because place-items: center; doesn't work otherwise
      }
    }

    & > * {
      width: 100%; // make sure that all children have initial width set
    }
  }
}
